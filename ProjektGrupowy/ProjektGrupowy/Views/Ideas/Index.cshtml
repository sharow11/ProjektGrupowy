@*@model IEnumerable<CTS.Idea>*@
@model PagedList.IPagedList<CTS.Idea>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Browse ideas";

}

<h2>Browse ideas</h2>
@if (User.Identity.IsAuthenticated)
{ 
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
else
{
    <p>
        @Html.ActionLink("Log in to create new ideas", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
    </p>
}

@using (Html.BeginForm("Index", "Ideas", FormMethod.Get))
{
    <p>
        Find idea by title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as String)
        <input type="submit" value="Search" />
    </p>
}

<center>
    <table>
        <tr>
            <td>
                <p>
                    Sort by:
                </p>
            </td>
            <td>
                <p>
                    @*@Html.DisplayNameFor(model => model.Title)*@
                    @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm })
                </p>
            </td>
            <td>
                <p>
                    @*@Html.DisplayNameFor(model => model.TimePosted)*@
                    @Html.ActionLink("Posted", "Index", new { sortOrder = ViewBag.TimeSortParm })
                </p>
            </td>
            <td>
                <p>
                    @*@Html.DisplayNameFor(model => model.Score)*@
                    @Html.ActionLink("Vote score", "Index", new { sortOrder = ViewBag.ScoreSortParm })
                </p>
            </td>
        </tr>
    </table>
</center>

<br />
@foreach (var item in Model)
{
    <div class="idea-list">
        <div class="idea-list-txt">
            <div class="idea-list-title">@Html.DisplayFor(modelItem => item.Title)</div>
            <br />
            <div class="idea-list-data">
                @Html.DisplayFor(modelItem => item.TimePosted)
                <br /><b>Score:</b>
                @Html.DisplayFor(modelItem => item.Score)
            </div>
        </div>
        <br />
        <center>
            <a href='@Url.Action("Details", new { id = item.Id })'>
                <img class="idea-img" src='@Url.Content("http://iconizer.net/files/Impressions_General_Icons/orig/bulb.png")' />
            </a>
        </center>
        <br />
        <center>
            <table>
                <tr>
                    <td>
                        <options>
                            @if (User.Identity.IsAuthenticated && item.AspNetUser != null && User.Identity.Name == item.AspNetUser.UserName)
                            {
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                            }
                        </options>
                    </td>
                    <td>
                        <options>
                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                        </options>
                    </td>
                    <td>
                        <options>
                            @if (User.Identity.IsAuthenticated && item.AspNetUser != null &&  User.Identity.Name == item.AspNetUser.UserName)
                            {
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            }
                        </options>
                    </td>
                </tr>
            </table>
        </center>
    </div>
}
<div style="clear: both">
    <br /><br />
</div>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
